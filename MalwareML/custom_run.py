import logging
import numpy as np

logger = logging.getLogger(__name__)


def custom_test(ml, reports, feature_matrix, truths, probabilities=True, feature_weights=None, use_best_params=False,
                results=False):

    classes = np.unique(truths)
    indices_by_class = [np.where(truths == cls)[0] for cls in classes]

    # Try with different length feature matrices
    accuracy_list = []
    num_samples_list = [10, 100, 1000, 2000, 5000, 10000, 20000, 50000]
    for num_samples in num_samples_list:
        subset_indices = np.concatenate([cls_indices[:num_samples] for cls_indices in indices_by_class])
        feats, troofs = feature_matrix[subset_indices], truths[subset_indices]
        predictions, indices = ml.test(feats, troofs, reports=reports,
                                       feature_weights=feature_weights, use_best_params=use_best_params)
        accuracy, _, _ = ml.accuracy(troofs, predictions, indices=indices)
        accuracy_list.append(accuracy)

    logging.info('Final accuracies')
    logging.info(accuracy_list)
    logging.info('Lengths (per class)')
    logging.info(num_samples_list)

