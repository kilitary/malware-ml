#!/usr/bin/env python3
import os
import sys
import shutil
import time
import logging
import datetime

log_dir_base = os.environ.get('LOGGING_DIRECTORY', os.path.join(os.path.expanduser('~'), 'shared', 'logs', 'runs'))


def setup_logging(base_dir=None, from_file=None):
    if base_dir is None:
        base_dir = log_dir_base
    if from_file is None:
        from_file = __file__

    log_dir = os.path.join(base_dir,
                           '{}-{}'.format(
                               datetime.datetime.now(),
                               os.path.splitext(os.path.basename(__file__))[0]
                           ))
    os.makedirs(log_dir)
    format_str = '%(asctime)s::%(filename)s::%(lineno)s::%(levelname)-8s::%(message)s'
    logging.basicConfig(
        filename=os.path.join(log_dir, 'out.log'),
        format=format_str,
        level=logging.DEBUG,
    )
    console = logging.StreamHandler()
    console.formatter = logging.Formatter(format_str)
    console.setLevel(logging.INFO)
    logger = logging.getLogger('')
    logger.addHandler(console)

    copy_files(log_dir, paths=[from_file])

    logger.debug('Starting program, ran as:')
    logger.debug(sys.argv)
    logger.debug('pwd: {}'.format(os.path.abspath(os.curdir)))

    return log_dir


def copy_files(log_dir, paths):
    """ Copies files used by this script to the log_dir """
    file_dir = os.path.join(log_dir, 'files')
    os.makedirs(file_dir)
    for path in paths:
        shutil.copy(path, file_dir)


if __name__ == '__main__':
    log_dir = setup_logging(log_dir_base)
    logger = logging.getLogger(__name__)

    while True:
        time.sleep(3)
        logger.info('Info log')
        logger.debug('Debug log')
        logger.error('Error log')
